#!/bin/bash
usage="$(basename -- "$0") [-htrsa] APPLICATION_HOME APPLICATION_SHORT_NAME DOWNLOAD_URL -- install application in Windows OS.

   Option:
         -h  show this help text
         -f  Install offline
         -t  Archive file type
         -r  Unzip to folder 
         -s  The folder name display in the tmp folder after decompressing the compressed file
         -a  Create folder

   Example:
         application.zip - bin
                         - application.exe
         $ installapp -t zip -r application https://xxx.application.xx/application-win-1.0.1.zip

         application.zip - application-win-1.0.1 - bin
                                                 - application.exe
         $ installapp -t zip -s application-win-1.0.1 https://xxx.application.xx/application-win-1.0.1.zip
"
while getopts 'hfart:s:' option; do
  case "$option" in
    h) echo "$usage"
       exit
       ;;
    f) OFFLINE=Y
       ;;
    r) UNZIP_FOLDER=Y
       ;;
    t) ARCHIVE_TYPE=$OPTARG
       ;;
    s) SRC_FOLDER=$OPTARG
       ;;
    a) MKDIR_FOLDER=Y
       ;;
    :) printf "missing argument for -%s\n" "$OPTARG" >&2
       echo "$usage" >&2
       exit 1
       ;;
   \?) printf "illegal option: -%s\n" "$OPTARG" >&2
       echo "$usage" >&2
       exit 1
       ;;
  esac
done
shift $((OPTIND - 1))
####
#### Main Script
####
if [ "$1" == '' ]; then
   exit 1;
fi
APPLICATION_HOME=$1
APPLICATION_SHORT_NAME=$2
DOWNLOAD_URL=$3
if [ "$UNZIP_FOLDER" == "Y" ]; then
   UNZIP_FOLDER=$APPLICATION_SHORT_NAME
   rm -rf $DEV_HOME/tmp/$UNZIP_FOLDER
fi
###
### Setting archive type to zip  
###
if [ "$ARCHIVE_TYPE" == '' ]; then
   ARCHIVE_TYPE=zip
fi
if [[ "$ARCHIVE_TYPE" == "zip" ]]; then
   ###
   ### Archive Type: zip
   ###
   set -x
   # Download zip from URL while mode is online
   if [ "$OFFLINE" == '' ]; then
      curl -L -o $DEV_HOME/tmp/$APPLICATION_SHORT_NAME.zip $DOWNLOAD_URL
      SRC_FOLDER_WITH_PATH=$DEV_HOME/tmp/$APPLICATION_SHORT_NAME.zip
   else
      SRC_FOLDER_WITH_PATH=$DOWNLOAD_URL
   fi
   7za x -r -o$DEV_HOME/tmp/$UNZIP_FOLDER "$SRC_FOLDER_WITH_PATH"
   set +x
   if [ "$SRC_FOLDER" == '' ]; then
      SRC_FOLDER=$APPLICATION_SHORT_NAME
   fi
   if [ -d "$DEV_HOME/tmp/$SRC_FOLDER" ]; then
      rm -rf $APPLICATION_HOME
      if [ "$?" != "0" ]; then
         echo "Can not install application!!! Please check program is running."
         exit 1
      fi
      if [ "$MKDIR_FOLDER" == "Y" ]; then
         mkdir -p $APPLICATION_HOME
      fi
      mv "$DEV_HOME/tmp/$SRC_FOLDER" $DEV_HOME/opt/$APPLICATION_SHORT_NAME
   fi
elif [[ "$ARCHIVE_TYPE" == "dmg" ]]; then
   ###
   ### Archive Type: dmg
   ###
   [ "$OFFLINE" == '' ] && curl -L -o $DEV_HOME/tmp/$APPLICATION_SHORT_NAME.dmg $DOWNLOAD_URL
   MOUNT_POINT=$(hdiutil attach $DEV_HOME/tmp/$APPLICATION_SHORT_NAME.dmg | grep Volumes | cut -f 3)
   if [ -d "$MOUNT_POINT/$SRC_FOLDER" ]; then
      rm -rf $APPLICATION_HOME
      mkdir -p $APPLICATION_HOME
      cp -prvf "$MOUNT_POINT/$SRC_FOLDER" $DEV_HOME/opt/$APPLICATION_SHORT_NAME
   fi
   hdiutil detach "$MOUNT_POINT"
elif [[ "$ARCHIVE_TYPE" == "tar.gz" ]] || [[ "$ARCHIVE_TYPE" == "tar.bz2" ]]; then
   ###
   ### Archive Type: tar.gz, tar.bz2
   ###
   set -x
   [ "$OFFLINE" == '' ] && curl -L -o $DEV_HOME/tmp/$APPLICATION_SHORT_NAME.$ARCHIVE_TYPE $DOWNLOAD_URL
   if [ "$UNZIP_FOLDER" != '' ]; then
      mkdir $DEV_HOME/tmp/$UNZIP_FOLDER
   fi
   tar zxvf $DEV_HOME/tmp/$APPLICATION_SHORT_NAME.$ARCHIVE_TYPE --directory $DEV_HOME/tmp/$UNZIP_FOLDER
   set +x
   if [ "$SRC_FOLDER" == '' ]; then
      SRC_FOLDER=$APPLICATION_SHORT_NAME
   fi
   if [ -d "$DEV_HOME/tmp/$SRC_FOLDER" ]; then
      rm -rf $APPLICATION_HOME
      if [ "$MKDIR_FOLDER" == "Y" ]; then
         mkdir -p $APPLICATION_HOME
      fi
      mv "$DEV_HOME/tmp/$SRC_FOLDER" $DEV_HOME/opt/$APPLICATION_SHORT_NAME
   fi
fi

