#!/bin/bash
usage="Portable Development Environment(PDE)

Usage:
  $(basename -- "$0") 
    
Command:
  setup     Setup ~/.bashrc for adding the function of starting PDE
  run       Run the project
  install   Install Application

Options:
  -h, --help    Help for PDE
"
####
####
setup() {
    if [[ -f ~/.bashrc ]]; then
        rowNum=$(grep -n "pdemain" ~/.bashrc | cut -d ":" -f 1)
    fi
    if [[ $rowNum == '' ]]; then
        echo -e "pde() {\n    source $1/bin/pdemain \$*\n}\necho \"Can use 'pde' command to Start Portable Development Environment(PDE)\"\n" >> ~/.bashrc
    else
        newPath=$1
        sed -i "${rowNum}s#\/.*\/bin\/pdemain#${newPath}\/bin\/pdemain#" ~/.bashrc
    fi
    cat ~/.bashrc
}
delete() {
    echo "Delete base directory in the home ($1)..."
    . $DEV_HOME/bin/setenv default
    cd $DEV_HOME
    rm -rf $DEV_HOME/home/$1
}
####
getEnvOS() {
    echo $(echo $MACHTYPE|awk -F- '{print $3}')
}
osIsWindows() {
    [[ $(getEnvOS) =~ ^msys.*$ ]] && echo "Y" || echo "N"
}
osIsMac() {
    [[ $(getEnvOS) =~ ^darwin.*$ ]] && echo "Y" || echo "N"
}
osIsLinux() {
    echo "N"
}
if [[ "$1" == "getFunciton" ]]; then
    return
fi
####
#### Main Script
####
if [[ $(osIsWindows) == "Y" ]]; then
    DIR="$(cd "$(dirname $(readlink -f "${BASH_SOURCE[0]}"))/.." && pwd)"
    export OS_WINDOWS="Y"
elif [[ $(osIsMac) == "Y" ]]; then
    DIR="$(cd "$(dirname "${BASH_ARGV[0]}")"/..; pwd)"
    export OS_MACOS="Y"
else
    echo "Sorry! PDE can't support on this system!!!"
    return
fi
if [[ ! -f $DIR/bin/setenv ]]; then
    echo "Can't found PDE HOME!!!"
    return
fi
export DEV_HOME=$DIR
echo "DEV_HOME: $DEV_HOME"
if [[ $DEV_HOME == '' ]]; then
    echo "Can't setup Portable Development Environment!!!"
    return
fi
if ! declare -F pde > /dev/null; then
    pde() {
        source $DEV_HOME/bin/pdemain $*
    }
fi
#### ==========================================================================

if [[ $1 == '' ]]; then
    . $DEV_HOME/bin/setenv $*
    cd $DEV_HOME
elif [[ $1 == "setup" ]]; then
    setup $DIR
elif [[ $1 == "run" ]]; then
    shift
    . $DEV_HOME/bin/setenv $*
elif [[ $1 == "delete" ]]; then
    shift
    delete $1
elif [[ $1 == "-h" ]]; then
    echo "$usage"
else
    echo "$usage"
fi
