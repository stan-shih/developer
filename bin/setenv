#!/bin/bash
echo "Setup Environment...($MACHTYPE)"
#### ==========================================================================
export DEV_ENV_ARCH=$(echo $MACHTYPE|awk -F- '{print $1}')
export DEV_ENV_MACH=$(echo $MACHTYPE|awk -F- '{print $2}')
getEnvOS() {
    echo $(echo $MACHTYPE|awk -F- '{print $3}')
}
osIsWindows() {
    [[ $(getEnvOS) =~ ^msys.*$ ]] && echo "Y" || echo "N"
}
osIsMac() {
    [[ $(getEnvOS) =~ ^darwin.*$ ]] && echo "Y" || echo "N"
}
#### ==========================================================================
if [[ -z $PATH_ORIGIN ]]; then
    export PATH_ORIGIN=$PATH
else
    export PATH=$PATH_ORIGIN
fi
#### ==========================================================================
if [[ $(osIsWindows) == "Y" ]]; then
    export DEV_HOME="$(cd "$(dirname $(readlink -f "${BASH_SOURCE[0]}"))/.." && pwd)"
fi
if [[ $(osIsMac) == "Y" ]]; then
    export DEV_HOME="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
fi
if [[ $DEV_HOME == '' ]]; then
    echo "Can't setup Portable Development Environment!!!"
    return
fi
#### ==========================================================================
source $DEV_HOME/etc/default.bashrc
#### After setup default configuration, check global configuration
if [ -f $DEV_HOME/etc/global.bashrc ]; then
    source $DEV_HOME/etc/global.bashrc
fi
#### ==========================================================================
export DEV_BASE=default
export DEV_DEFAULT_BASE=$DEV_HOME/home/$DEV_BASE
source $DEV_DEFAULT_BASE/bash.bashrc
if [[ "$1" != '' ]]; then
    export DEV_BASE=$1
fi
export BASE=$DEV_HOME/home/$DEV_BASE
if [ ! -d $BASE ]; then
    mkdir -p $BASE
    echo "Create base directory in the home ($BASE)."
    echo "Please setup java and eclipse"
fi
[ -f $BASE/bash.bashrc ] && source $BASE/bash.bashrc
#### ==========================================================================
if [ -z $JAVA_HOME ]; then
    export JAVA_HOME=$BASE/java
fi
if [[ ! "$PATH" =~ $JAVA_HOME/bin ]]; then
    export PATH=$JAVA_HOME/bin:$PATH
fi
#### ==========================================================================
if [[ ! "$PATH" =~ $DEV_HOME/usr/local/bin ]]; then
    export PATH=$DEV_HOME/usr/local/bin:$PATH
fi
if [[ ! "$PATH" =~ $DEV_HOME/bin ]]; then
    export PATH=$DEV_HOME/bin:$DEV_HOME:$PATH
elif [[ ! "$PATH" =~ ^$DEV_HOME/bin ]]; then
    # PATH reset the bin path
    export PATH=$DEV_HOME/bin:$DEV_HOME:${PATH/}$DEV_HOME\/bin/}
fi
#### ==========================================================================
source $DEV_HOME/etc/application.setting
#### ==========================================================================
source userinfo
#### ==========================================================================
if [ ! -f ~/.ssh/id_rsa.pub ]; then
    echo "SSH Key does not exist, creating new one in ~/.ssh"
    ssh-keygen -q -t rsa -N "" -f ~/.ssh/id_rsa
fi
#### ==========================================================================
if [[ "$DEV_ENV_OS" =~ ^msys.*$ ]];then
    # Setup Git Bash Support Cmd Charset
    cmd //C "chcp 65001"
    # Add gsudo to PATH
    export PATH=$PATH:$DEV_HOME/opt/gsudo.portable/x64
fi
#### ==========================================================================
source bashprompt
#### ==========================================================================
denv
#### ==========================================================================
echo "---------------------------------------------------------------------------------------------------"
echo "This Bash has set alias list:"
alias
echo "---------------------------------------------------------------------------------------------------"
if [[ "$1" == '' ]]; then
    ls -al $DEV_HOME/home
fi
